{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","noCount","setNoCount","useState","yesPressed","setYesPressed","yesButtonSize","React","createElement","className","Fragment","src","style","fontSize","onClick","handleNoClick","getNoButtonText","phrases","Math","min","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAIe,SAASA,IACtB,MAAOC,EAASC,GAAcC,mBAAS,IAChCC,EAAYC,GAAiBF,oBAAS,GACvCG,EAA0B,GAAVL,EAAe,GA6BrC,OACEM,IAAAC,cAAA,OAAKC,UAAU,6DACZL,EACCG,IAAAC,cAAAD,IAAAG,SAAA,KACAH,IAAAC,cAAA,OAAKG,IAAI,uEACTJ,IAAAC,cAAA,OAAKC,UAAU,2BAA0B,cAGzCF,IAAAC,cAAAD,IAAAG,SAAA,KACEH,IAAAC,cAAA,OAAKC,UAAU,YAAYE,IAAI,iLAC/BJ,IAAAC,cAAA,MAAIC,UAAU,iBAAgB,6BAC9BF,IAAAC,cAAA,WACED,IAAAC,cAAA,UACEC,UAAS,8EACTG,MAAO,CAAEC,SAAUP,GACnBQ,QAASA,IAAMT,GAAc,IAC9B,OAGDE,IAAAC,cAAA,UACEM,QA/CUC,KACpBb,EAAWD,EAAU,IA+CXQ,UAAU,uEAEG,IAAZR,EAAgB,KA9CLe,MACtB,MAAMC,EAAU,CACd,KACA,gBACA,eACA,eACA,eACA,cACA,yBACA,2BACA,8BACA,2BACA,gBACA,oBACA,mBACA,2BACA,6BACA,+BAGF,OAAOA,EAAQC,KAAKC,IAAIlB,EAASgB,EAAQG,OAAS,KA0BhBJ,OC/CvBK,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/B,IAAAC,cAACD,IAAMgC,WAAU,KACfhC,IAAAC,cAACR,EAAG,QAORqB","file":"static/js/main.602c987d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\nimport './App.css';\n\nexport default function App() {\n  const [noCount, setNoCount] = useState(0);\n  const [yesPressed, setYesPressed] = useState(false);\n  const yesButtonSize = noCount * 20 + 16;\n\n  const handleNoClick = () => {\n    setNoCount(noCount + 1);\n  };\n\n  const getNoButtonText = () => {\n    const phrases = [\n      \"No\",\n      \"Are you sure?\",\n      \"Really sure?\",\n      \"Think again!\",\n      \"Last chance!\",\n      \"Surely not?\",\n      \"You might regret this!\",\n      \"Give it another thought!\",\n      \"Are you absolutely certain?\",\n      \"This could be a mistake!\",\n      \"Have a heart!\",\n      \"Don't be so cold!\",\n      \"Change of heart?\",\n      \"Wouldn't you reconsider?\",\n      \"Is that your final answer?\",\n      \"You're breaking my heart ;(\",\n    ];\n\n    return phrases[Math.min(noCount, phrases.length - 1)];\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen -mt-16\">\n      {yesPressed ? (\n        <>\n        <img src=\"https://media.tenor.com/gUiu1zyxfzYAAAAi/bear-kiss-bear-kisses.gif\" />\n        <div className=\"text-4xl font-bold my-4\">Ok yay!!!</div>\n        </>\n      ) : (\n        <>\n          <img className=\"h-[200px]\" src=\"https://media.giphy.com/media/v1.Y2lkPTc5MGI3NjExaHk2NjU3NHZsZGp2cXU0dzRtemVlZjJqdzNuNnJieGR4ZHZhcHdjcSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/W2PnVTZyl8Rc3X086R/giphy.gif\" />\n          <h1 className=\"text-4xl my-4\">Will you be my Valentine?</h1>\n          <div>\n            <button\n              className={`bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mr-4`}\n              style={{ fontSize: yesButtonSize }}\n              onClick={() => setYesPressed(true)}\n            >\n              Yes\n            </button>\n            <button\n              onClick={handleNoClick}\n              className=\" bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\n            >\n              {noCount === 0 ? \"No\" : getNoButtonText()}\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}